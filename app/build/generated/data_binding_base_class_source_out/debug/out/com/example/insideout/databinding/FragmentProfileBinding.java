// Generated by view binder compiler. Do not edit!
package com.example.insideout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.insideout.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout bottomProfileContainer;

  @NonNull
  public final EditText personEmail;

  @NonNull
  public final EditText personFamilyName;

  @NonNull
  public final EditText personGivenName;

  @NonNull
  public final TextView personName;

  @NonNull
  public final ImageView personPhoto;

  @NonNull
  public final CardView profileCardView;

  @NonNull
  public final ConstraintLayout profileContainer;

  @NonNull
  public final MaterialButton signOutButton;

  @NonNull
  public final ConstraintLayout topProfileContainer;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout bottomProfileContainer, @NonNull EditText personEmail,
      @NonNull EditText personFamilyName, @NonNull EditText personGivenName,
      @NonNull TextView personName, @NonNull ImageView personPhoto,
      @NonNull CardView profileCardView, @NonNull ConstraintLayout profileContainer,
      @NonNull MaterialButton signOutButton, @NonNull ConstraintLayout topProfileContainer) {
    this.rootView = rootView;
    this.bottomProfileContainer = bottomProfileContainer;
    this.personEmail = personEmail;
    this.personFamilyName = personFamilyName;
    this.personGivenName = personGivenName;
    this.personName = personName;
    this.personPhoto = personPhoto;
    this.profileCardView = profileCardView;
    this.profileContainer = profileContainer;
    this.signOutButton = signOutButton;
    this.topProfileContainer = topProfileContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_profile_container;
      ConstraintLayout bottomProfileContainer = ViewBindings.findChildViewById(rootView, id);
      if (bottomProfileContainer == null) {
        break missingId;
      }

      id = R.id.personEmail;
      EditText personEmail = ViewBindings.findChildViewById(rootView, id);
      if (personEmail == null) {
        break missingId;
      }

      id = R.id.personFamilyName;
      EditText personFamilyName = ViewBindings.findChildViewById(rootView, id);
      if (personFamilyName == null) {
        break missingId;
      }

      id = R.id.personGivenName;
      EditText personGivenName = ViewBindings.findChildViewById(rootView, id);
      if (personGivenName == null) {
        break missingId;
      }

      id = R.id.personName;
      TextView personName = ViewBindings.findChildViewById(rootView, id);
      if (personName == null) {
        break missingId;
      }

      id = R.id.personPhoto;
      ImageView personPhoto = ViewBindings.findChildViewById(rootView, id);
      if (personPhoto == null) {
        break missingId;
      }

      id = R.id.profileCardView;
      CardView profileCardView = ViewBindings.findChildViewById(rootView, id);
      if (profileCardView == null) {
        break missingId;
      }

      ConstraintLayout profileContainer = (ConstraintLayout) rootView;

      id = R.id.signOutButton;
      MaterialButton signOutButton = ViewBindings.findChildViewById(rootView, id);
      if (signOutButton == null) {
        break missingId;
      }

      id = R.id.top_profile_container;
      ConstraintLayout topProfileContainer = ViewBindings.findChildViewById(rootView, id);
      if (topProfileContainer == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, bottomProfileContainer,
          personEmail, personFamilyName, personGivenName, personName, personPhoto, profileCardView,
          profileContainer, signOutButton, topProfileContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
